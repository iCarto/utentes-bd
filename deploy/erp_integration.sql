-- Deploy utentes:erp_integration to pg

BEGIN;

CREATE TABLE utentes.exploracaos_erp (
    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
    , exploracao_gid integer REFERENCES utentes.exploracaos(gid) ON UPDATE CASCADE ON DELETE SET NULL
   , erp_id text
   , link_id text
   , created_at timestamp without time zone NOT NULL DEFAULT now()
   , exported_at timestamp without time zone
   --, dirty boolean no lo vamos a usar en principio pero podría tener estados o permitirnos marcar si debemos exportar esta explotación o no
);

COMMENT ON TABLE utentes.exploracaos_erp IS 'Keep a relationship between the exploracaos registered in SIRHA and a external ERP for invoicing and accountability';
COMMENT ON COLUMN utentes.exploracaos_erp.id IS 'We keep a surrogate primary key to anticipate some unknows in the integration between different tools';
COMMENT ON COLUMN utentes.exploracaos_erp.exploracao_gid IS 'If an exploracao is deleted I want to keep track of it. For example cancel it in the ERP on the next export';
COMMENT ON COLUMN utentes.exploracaos_erp.erp_id IS 'Primary Key of the related exploracao in the ERP System when we are able to get it. Represented always as text for flexibility';
COMMENT ON COLUMN utentes.exploracaos_erp.link_id IS 'For flexibility we generate a common key between the ERP and SIRHA. It could a unique value in any of the systems, or a new created one';
COMMENT ON COLUMN utentes.exploracaos_erp.exported_at IS 'Timestamp of the last time this exploracao was exported';


CREATE OR REPLACE FUNCTION utentes.update_updated_at()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
$function$
;

ALTER TABLE utentes.facturacao
    ADD COLUMN updated_at timestamp without time zone NOT NULL DEFAULT now()
;
UPDATE utentes.facturacao SET updated_at = created_at;

CREATE TRIGGER update_updated_at
    BEFORE UPDATE ON utentes.facturacao
    FOR EACH ROW EXECUTE PROCEDURE utentes.update_updated_at();



CREATE TABLE utentes.facturacao_erp (
    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
    , facturacao_gid integer REFERENCES utentes.facturacao(gid) ON UPDATE CASCADE ON DELETE SET NULL
   , erp_id text
   , link_id text
   , created_at timestamp without time zone NOT NULL DEFAULT now()
   , exported_at timestamp without time zone
   --, dirty boolean no lo vamos a usar en principio pero podría tener estados o permitirnos marcar si debemos exportar esta explotación o no
);

COMMENT ON TABLE utentes.facturacao_erp IS 'Keep a relationship between the invoices registered in SIRHA and the invoices in a external ERP';
COMMENT ON COLUMN utentes.facturacao_erp.id IS 'We keep a surrogate primary key to anticipate some unknows in the integration between different tools';
COMMENT ON COLUMN utentes.facturacao_erp.facturacao_gid IS 'If an invoice is deleted I want to keep track of it. For example cancel it in the ERP on the next export';
COMMENT ON COLUMN utentes.facturacao_erp.erp_id IS 'Primary Key of the related invoice in the ERP System when we are able to get it. Represented always as text for flexibility';
COMMENT ON COLUMN utentes.facturacao_erp.link_id IS 'For flexibility we generate a common key between the ERP and SIRHA. It could a unique value in any of the systems, or a new created one';
COMMENT ON COLUMN utentes.facturacao_erp.exported_at IS 'Timestamp of the last time this invoice was exported';

COMMIT;
